/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NRPPA-PDU-Descriptions"
 * 	found in "../support/nrppa-r18.1.0/38455-i10.asn"
 * 	`asn1c -pdu=all -fcompound-names -findirect-choice -fno-include-deps -no-gen-BER -no-gen-XER -no-gen-OER -no-gen-UPER -no-gen-JER`
 */

#ifndef	_NRPPa_SuccessfulOutcome_H_
#define	_NRPPa_SuccessfulOutcome_H_


#include <asn_application.h>

/* Including external dependencies */
#include "NRPPa_ProcedureCode.h"
#include "NRPPa_Criticality.h"
#include "NRPPa_NRPPATransactionID.h"
#include <ANY.h>
#include <asn_ioc.h>
#include "NRPPa_E-CIDMeasurementInitiationRequest.h"
#include "NRPPa_E-CIDMeasurementInitiationResponse.h"
#include "NRPPa_E-CIDMeasurementInitiationFailure.h"
#include "NRPPa_OTDOAInformationRequest.h"
#include "NRPPa_OTDOAInformationResponse.h"
#include "NRPPa_OTDOAInformationFailure.h"
#include "NRPPa_PositioningInformationRequest.h"
#include "NRPPa_PositioningInformationResponse.h"
#include "NRPPa_PositioningInformationFailure.h"
#include "NRPPa_MeasurementRequest.h"
#include "NRPPa_MeasurementResponse.h"
#include "NRPPa_MeasurementFailure.h"
#include "NRPPa_TRPInformationRequest.h"
#include "NRPPa_TRPInformationResponse.h"
#include "NRPPa_TRPInformationFailure.h"
#include "NRPPa_PositioningActivationRequest.h"
#include "NRPPa_PositioningActivationResponse.h"
#include "NRPPa_PositioningActivationFailure.h"
#include "NRPPa_PRSConfigurationRequest.h"
#include "NRPPa_PRSConfigurationResponse.h"
#include "NRPPa_PRSConfigurationFailure.h"
#include "NRPPa_MeasurementPreconfigurationRequired.h"
#include "NRPPa_MeasurementPreconfigurationConfirm.h"
#include "NRPPa_MeasurementPreconfigurationRefuse.h"
#include "NRPPa_E-CIDMeasurementFailureIndication.h"
#include "NRPPa_E-CIDMeasurementReport.h"
#include "NRPPa_E-CIDMeasurementTerminationCommand.h"
#include "NRPPa_ErrorIndication.h"
#include "NRPPa_PrivateMessage.h"
#include "NRPPa_AssistanceInformationControl.h"
#include "NRPPa_AssistanceInformationFeedback.h"
#include "NRPPa_PositioningInformationUpdate.h"
#include "NRPPa_MeasurementReport.h"
#include "NRPPa_MeasurementUpdate.h"
#include "NRPPa_MeasurementAbort.h"
#include "NRPPa_MeasurementFailureIndication.h"
#include "NRPPa_PositioningDeactivation.h"
#include "NRPPa_MeasurementActivation.h"
#include "NRPPa_SRSInformationReservationNotification.h"
#include <OPEN_TYPE.h>
#include <constr_CHOICE.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum NRPPa_SuccessfulOutcome__value_PR {
	NRPPa_SuccessfulOutcome__value_PR_NOTHING,	/* No components present */
	NRPPa_SuccessfulOutcome__value_PR_E_CIDMeasurementInitiationResponse,
	NRPPa_SuccessfulOutcome__value_PR_OTDOAInformationResponse,
	NRPPa_SuccessfulOutcome__value_PR_PositioningInformationResponse,
	NRPPa_SuccessfulOutcome__value_PR_MeasurementResponse,
	NRPPa_SuccessfulOutcome__value_PR_TRPInformationResponse,
	NRPPa_SuccessfulOutcome__value_PR_PositioningActivationResponse,
	NRPPa_SuccessfulOutcome__value_PR_PRSConfigurationResponse,
	NRPPa_SuccessfulOutcome__value_PR_MeasurementPreconfigurationConfirm
} NRPPa_SuccessfulOutcome__value_PR;

/* NRPPa_SuccessfulOutcome */
typedef struct NRPPa_SuccessfulOutcome {
	NRPPa_ProcedureCode_t	 procedureCode;
	NRPPa_Criticality_t	 criticality;
	NRPPa_NRPPATransactionID_t	 nrppatransactionID;
	struct NRPPa_SuccessfulOutcome__value {
		NRPPa_SuccessfulOutcome__value_PR present;
		union NRPPa_SuccessfulOutcome__NRPPa_value_u {
			NRPPa_E_CIDMeasurementInitiationResponse_t	 E_CIDMeasurementInitiationResponse;
			NRPPa_OTDOAInformationResponse_t	 OTDOAInformationResponse;
			NRPPa_PositioningInformationResponse_t	 PositioningInformationResponse;
			NRPPa_MeasurementResponse_t	 MeasurementResponse;
			NRPPa_TRPInformationResponse_t	 TRPInformationResponse;
			NRPPa_PositioningActivationResponse_t	 PositioningActivationResponse;
			NRPPa_PRSConfigurationResponse_t	 PRSConfigurationResponse;
			NRPPa_MeasurementPreconfigurationConfirm_t	 MeasurementPreconfigurationConfirm;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} value;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} NRPPa_SuccessfulOutcome_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_NRPPa_SuccessfulOutcome;
extern asn_SEQUENCE_specifics_t asn_SPC_NRPPa_SuccessfulOutcome_specs_1;
extern asn_TYPE_member_t asn_MBR_NRPPa_SuccessfulOutcome_1[4];

#ifdef __cplusplus
}
#endif

#endif	/* _NRPPa_SuccessfulOutcome_H_ */
#include <asn_internal.h>
